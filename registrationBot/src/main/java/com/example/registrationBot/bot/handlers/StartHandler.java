package com.example.registrationBot.bot.handlers;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import com.example.registrationBot.bot.BookingContext;
import com.example.registrationBot.bot.Controller;
import com.example.registrationBot.bot.UserBot;
import com.example.registrationBot.bot.UserResponseHandler;
import com.example.registrationBot.bot.UserState;
import com.example.registrationBot.utils.KeyboardUtil;
import com.example.registrationBot.utils.AdminIdExtractor;

@Component
public class StartHandler implements UserResponseHandler {
    @Autowired
    private Controller controller;

    @Override
    public void handle(String message, BookingContext context, UserBot userBot) {
        long adminId;
        if (controller.getAdminIdFromAdminClient(context.getChatId()) == null) {
            adminId = AdminIdExtractor.extractAdminIdFromStartCommand(message);
            controller.addClientAdmin(context.getChatId(), adminId);
        } else {
            adminId = controller.getAdminIdFromAdminClient(context.getChatId());
        }

        context.setAdminId(adminId);

        userBot.sendMessage(context.getChatId(),
            "üëã –ü—Ä–∏–≤–µ—Ç! –¢—ã –ø–æ–ø–∞–ª –≤ demo-–±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥–∏.\n" +
            "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö ‚Äî –Ω–∏ –æ–¥–Ω–∞ –∏–∑ —É—Å–ª—É–≥ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω–æ–π.\n" +
            "–ù–∞–∂–º–∏ /start, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.");

        List<String> services = controller.findAllServicesForUser(adminId, context.getChatId());
        InlineKeyboardMarkup keyboard = KeyboardUtil.createInlineKeyboard(services);
        userBot.sendMessage(context.getChatId(),
            "üíº –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è:", keyboard);

        context.setState(UserState.CHOOSE_SERVICE);
    }

    @Override
    public UserState getState() {
        return UserState.START;
    }
}
